{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": { "type": "securestring" },
    "adminUsername": {
      "defaultValue": "Adminvsc",
      "type": "string"
    },
    "DataDiscCount": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [

        2,
        4,
        6,
        8
      ]
    },
    "DeplyomentType": {
      "allowedValues": [

        "DC",
        "SQL",
        "Frontend",
        "Backend"

      ],
      "defaultValue": "DC",
      "type": "string"
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 5
    },
    "vmName": { "type": "string" },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [

        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue" : "https://raw.githubusercontent.com/sredlin/azure-arm-templates/master/Azure-New-Drive.ps1",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "resources": [

    {
      "apiVersion": "[providers('Microsoft.Compute', 'availabilitySets').apiVersions[0]]",
      "location": "[resourceGroup().location]",
      "name": "[concat('HA-',parameters('DeplyomentType'))]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 3

      },
      "sku": {
        "name": "Aligned"
      },
      "type": "Microsoft.Compute/availabilitySets"
    },


    {
      "apiVersion": "2016-03-30",
      "copy": {

        "name": "publicipaddressloop",
        "count": "[parameters('numberOfInstances')]"

      },
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('vmName'),copyindex(1),'-PublicIPAddress')]",
      "properties": {

        "publicIPAllocationMethod": "Dynamic",

        "dnsSettings": {

          "domainNameLabel": "[tolower(concat(parameters('vmName'),copyindex(1),'-PublicDNS-',uniqueString(resourceGroup().id)))]"

        }

      },
      "type": "Microsoft.Network/publicIPAddresses"
    },

    {
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "name": "[concat('Azure-VNet-',parameters('DeplyomentType'))]",
      "properties": {

        "addressSpace": { "addressPrefixes": [ "10.0.0.0/16" ] },

        "subnets": [

          {

            "name": "[concat(parameters('DeplyomentType'), '-Subnet')]",

            "properties": {
              "addressPrefix": "10.0.0.0/24"

            }





          }
        ]

      },
      "type": "Microsoft.Network/virtualNetworks"
    },

    {
      "apiVersion": "2016-03-30",
      "copy": {

        "name": "nicloop",
        "count": "[parameters('numberOfInstances')]"

      },
      "dependsOn": [

        "[resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('vmName'),copyindex(1),'-PublicIPAddress'))]",

        "[resourceId('Microsoft.Network/virtualNetworks/', concat('Azure-VNet-',parameters('DeplyomentType')))]",



        "[concat('Microsoft.Network/networkSecurityGroups/', 'Allow-RDP')]"


      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('vmName'),copyindex(1),'-NIC')]",
      "properties": {
        "dnsSettings": {
          "dnsServers": [ "10.0.0.5" ]
        },
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'Allow-RDP')]"
        },

        "ipConfigurations": [

          {

            "name": "[concat(parameters('vmName'),copyindex(1),'-IPConfig')]",

            "properties": {


              "privateIPAllocationMethod": "Dynamic",

              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyindex(1),'-PublicIPAddress'))]" },

              "subnet": { "id": "[variables('subnetRef')]" }

            }

          }

        ]

      },
      "type": "Microsoft.Network/networkInterfaces"
    },

    {
      "apiVersion": "2016-04-30-preview",
      "copy": {
        "count": "[parameters('numberOfInstances')]",
        "name": "vmloop"
      },
      "dependsOn": [

        "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('vmName'),copyindex(1),'-NIC'))]"

      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('vmName'),copyindex(1))]",
      "properties": {

        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('HA-', parameters('DeplyomentType')))]"
        },

        "hardwareProfile": { "vmSize": "Standard_D2" },

        "osProfile": {

          "computerName": "[concat(parameters('vmName'),copyindex(1))]",

          "adminUsername": "[parameters('adminUsername')]",

          "adminPassword": "[parameters('adminPassword')]"

        },

        "storageProfile": {

          "imageReference": {

            "publisher": "MicrosoftWindowsServer",

            "offer": "WindowsServer",

            "sku": "[parameters('windowsOSVersion')]",

            "version": "latest"

          },

          "osDisk": {

            "name": "[concat(parameters('vmName'),copyindex(1),'-OSDisk')]",

            "caching": "ReadWrite",

            "createOption": "FromImage"

          },
          "copy": [

            {

              "name": "dataDisks",

              "count": "[parameters('DataDiscCount')]",

              "input": {

                "name": "[concat(parameters('vmName'),copyindex(1),'-dataDisk-',copyIndex('dataDisks'))]",

                "diskSizeGB": 5,

                "lun": "[copyIndex('dataDisks')]",

                "createOption": "Empty"

              }

            }

          ]

        },

        "networkProfile": {

          "networkInterfaces": [

            {

              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),copyindex(1),'-NIC'))]"

            }

          ]


        }







      },
      "type": "Microsoft.Compute/virtualMachines",
      "resources": [
        {
          "name": "HDD",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmName'),copyindex(1)))]"
          ],
          "tags": {
            "displayName": "HDD"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('HDDScriptFolder'), '/', variables('HDDScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('HDDScriptFolder'), '/', variables('HDDScriptFileName'))]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "Allow-RDP",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-RDP",
            "properties": {
              "description": "Allow-RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    }


  ],
  "variables": {
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('DeplyomentType'), '-Subnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat('Azure-Vnet-',parameters('DeplyomentType')))]",
    "HDDScriptFolder": ".",
    "HDDScriptFileName": "Azure-New-Drive.ps1"
  }
}